// This file is auto-generated by @hey-api/openapi-ts

export const $HTTPValidationError = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const $Importance = {
    type: 'integer',
    enum: [0, 1, 2, 3],
    title: 'Importance'
} as const;

export const $PaginateModel_Todo_ = {
    properties: {
        page: {
            type: 'integer',
            title: 'Page'
        },
        per_page: {
            type: 'integer',
            title: 'Per Page'
        },
        total_items: {
            type: 'integer',
            title: 'Total Items'
        },
        items: {
            items: {
                '$ref': '#/components/schemas/Todo'
            },
            type: 'array',
            title: 'Items'
        }
    },
    type: 'object',
    required: ['page', 'per_page', 'total_items', 'items'],
    title: 'PaginateModel[Todo]'
} as const;

export const $Tag = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        color: {
            type: 'string',
            title: 'Color'
        }
    },
    type: 'object',
    required: ['id', 'name', 'color'],
    title: 'Tag'
} as const;

export const $Todo = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        item: {
            type: 'string',
            title: 'Item'
        },
        create_time: {
            type: 'string',
            format: 'date-time',
            title: 'Create Time'
        },
        plan_time: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Plan Time'
        },
        content: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Content'
        },
        user_id: {
            type: 'integer',
            title: 'User Id'
        },
        importance: {
            '$ref': '#/components/schemas/Importance'
        },
        tags: {
            anyOf: [
                {
                    items: {
                        '$ref': '#/components/schemas/Tag'
                    },
                    type: 'array'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Tags'
        }
    },
    type: 'object',
    required: ['id', 'item', 'create_time', 'plan_time', 'content', 'user_id', 'importance', 'tags'],
    title: 'Todo'
} as const;

export const $TodoDto = {
    properties: {
        item: {
            type: 'string',
            title: 'Item'
        },
        plan_time: {
            type: 'string',
            title: 'Plan Time'
        },
        user_id: {
            type: 'integer',
            title: 'User Id'
        },
        content: {
            type: 'string',
            title: 'Content'
        },
        importance: {
            '$ref': '#/components/schemas/Importance'
        }
    },
    type: 'object',
    required: ['item', 'plan_time', 'user_id', 'content', 'importance'],
    title: 'TodoDto'
} as const;

export const $UpdateTodoDto = {
    properties: {
        item: {
            type: 'string',
            title: 'Item'
        },
        plan_time: {
            type: 'string',
            title: 'Plan Time'
        },
        content: {
            type: 'string',
            title: 'Content'
        },
        importance: {
            '$ref': '#/components/schemas/Importance'
        }
    },
    type: 'object',
    required: ['item', 'plan_time', 'content', 'importance'],
    title: 'UpdateTodoDto'
} as const;

export const $User = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        user_name: {
            type: 'string',
            title: 'User Name'
        },
        pwd: {
            type: 'string',
            title: 'Pwd'
        }
    },
    type: 'object',
    required: ['id', 'user_name', 'pwd'],
    title: 'User'
} as const;

export const $UserDto = {
    properties: {
        user_name: {
            type: 'string',
            title: 'User Name'
        },
        pwd: {
            type: 'string',
            title: 'Pwd'
        }
    },
    type: 'object',
    required: ['user_name', 'pwd'],
    title: 'UserDto'
} as const;

export const $ValidationError = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;